{"version":3,"file":"component---src-pages-index-tsx-4df51a3af8c568c4660b.js","mappings":"8LAkGA,UA7DmD,YAY/C,IAXUA,EAWX,EAXDC,SAAYD,OAWX,IAVDE,KAUC,IATCC,KACEC,aAAgBC,EAQnB,EARmBA,MAAOC,EAQ1B,EAR0BA,YAAaC,EAQvC,EARuCA,QAEjBC,EAMtB,EANCC,kBAAqBD,MAMtB,IALCE,KAEEC,GAGH,EAJGC,gBAAmBC,gBAItB,EAHGF,WAIEG,EAA8BC,EAAAA,MAApC,GACMC,EACJ,iBAAOF,EAAP,UAAwCA,EAAxC,SAEIA,EAHN,SACE,MAIIG,GAAeC,EAAAA,EAAAA,UACnB,kBACEV,EAAA,QACE,cAeE,OARG,EAJDW,KACEC,YAAeC,WAInBA,SAAmB,SAAAC,QACjB,IAAIC,EAAAA,GAA8BA,EAAAA,GAAlC,EACKA,EAAAA,QAGPA,EAAI,MAEGA,IAET,CAAEC,IAAK,MApBb,IAwBA,OACE,aACEnB,MADF,EAEEC,YAFF,EAGEmB,IAHF,EAIEC,MAAOf,IAEP,gBACE,aACEK,iBADF,EAEEC,aAAcA,KAEhB,aAAUD,iBAAV,EAA8CW,MAAOnB,OAQtD,IAyCDoB,GAAS","sources":["webpack://onshorelog/./src/pages/index.tsx"],"sourcesContent":["import React, { FunctionComponent, useMemo } from 'react'\nimport { graphql } from 'gatsby'\n\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport queryString, { ParsedQuery } from 'query-string'\nimport styled from '@emotion/styled'\n\nimport { PostListItemType } from 'types/PostItem.types'\n\nimport CategoryList, { CategoryListProps } from 'components/Blog/CategoryList'\nimport PostList, { PostType } from 'components/Blog/PostList'\nimport Template from 'components/Common/Template'\n\ntype BlogPageProps = {\n  location: {\n    search: string\n  }\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        siteUrl: string\n      }\n    }\n    allMarkdownRemark: {\n      edges: PostListItemType[]\n    }\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n      publicURL: string\n    }\n  }\n}\n\nconst BlogPage: FunctionComponent<BlogPageProps> = function ({\n  location: { search },\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    allMarkdownRemark: { edges },\n    file: {\n      childImageSharp: { gatsbyImageData },\n      publicURL,\n    },\n  },\n}) {\n  const parsed: ParsedQuery<string> = queryString.parse(search)\n  const selectedCategory: string =\n    typeof parsed.category !== 'string' || !parsed.category\n      ? 'All'\n      : parsed.category\n\n  const categoryList = useMemo(\n    () =>\n      edges.reduce(\n        (\n          list: CategoryListProps['categoryList'],\n          {\n            node: {\n              frontmatter: { categories },\n            },\n          }: PostType,\n        ) => {\n          categories.forEach(category => {\n            if (list[category] === undefined) list[category] = 1\n            else list[category]++\n          })\n\n          list['All']++\n\n          return list\n        },\n        { All: 0 },\n      ),\n    [],\n  )\n  return (\n    <Template\n      title={title}\n      description={description}\n      url={siteUrl}\n      image={publicURL}\n    >\n      <Container>\n        <CategoryList\n          selectedCategory={selectedCategory}\n          categoryList={categoryList}\n        />\n        <PostList selectedCategory={selectedCategory} posts={edges} />\n      </Container>\n    </Template>\n  )\n}\n\nexport default BlogPage\n\nexport const getBlogList = graphql`\n  query getBlogList {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 400)\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      }\n      publicURL\n    }\n  }\n`\n\nconst Container = styled.div`\n  width: 768px;\n  margin: 100px auto;\n  padding: 20px;\n\n  @media (max-width: 768px) {\n    width: 100vw;\n    font-size: 12px;\n  }\n`\n"],"names":["search","location","data","site","siteMetadata","title","description","siteUrl","edges","allMarkdownRemark","file","publicURL","childImageSharp","gatsbyImageData","parsed","queryString","selectedCategory","categoryList","useMemo","node","frontmatter","categories","category","list","All","url","image","posts","Container"],"sourceRoot":""}